[
  {
    "$project": {
      "_id": 0,
      "report.tests.keywords": 1,
      "report.tests.call.log.msg": 1,
      "report.collectors": 1
    }
  },
  {
    "$match": {
      "report.collectors.outcome": {
        "$regex": "passed"
      }
    }
  },
  {
    "$unwind": {
      "path": "$report.tests"
    }
  },
  {
    "$unwind": {
      "path": "$report.tests.keywords"
    }
  },
  {
    "$match": {
      "report.tests.keywords": {
        "$regex": "test_run_io_operation"
      }
    }
  },
  {
    "$unwind": {
      "path": "$report.tests.call"
    }
  },
  {
    "$unwind": {
      "path": "$report.tests.call.log"
    }
  },
  {
    "$project": {
      "msg": "$report.tests.call.log.msg",
      "write_pattern_string": {
        "$regexFind": {
          "input": "$report.tests.keywords",
          "regex": "test_run_io_operation\\[(\\d+)-(\\d+)"
        }
      }
    }
  },
  {
    "$project": {
      "msg": 1,
      "write_pattern": {
        "$convert": {
          "input": {
            "$arrayElemAt": [
              "$write_pattern_string.captures",
              0
            ]
          },
          "to": "int",
          "onError": null,
          "onNull": null
        }
      },
      "ramp_times": {
        "$convert": {
          "input": {
            "$arrayElemAt": [
              "$write_pattern_string.captures",
              1
            ]
          },
          "to": "int",
          "onError": null,
          "onNull": null
        }
      }
    }
  },
  {
    "$project": {
      "write_pattern": 1,
      "ramp_times": 1,
      "read_iops_string": {
        "$regexFind": {
          "input": "$msg",
          "regex": "ramp_read_iops = (\\d+.\\d+)"
        }
      },
      "read_bw_string": {
        "$regexFind": {
          "input": "$msg",
          "regex": "ramp_read_bw = (\\d+.\\d+)"
        }
      },
      "write_iops_string": {
        "$regexFind": {
          "input": "$msg",
          "regex": "ramp_write_iops = (\\d+.\\d+)"
        }
      },
      "write_bw_string": {
        "$regexFind": {
          "input": "$msg",
          "regex": "ramp_write_bw = (\\d+.\\d+)"
        }
      }
    }
  },
  {
    "$project": {
      "write_pattern": 1,
      "ramp_times": 1,
      "read_iops": {
        "$convert": {
          "input": {
            "$arrayElemAt": [
              "$read_iops_string.captures",
              0
            ]
          },
          "to": "double",
          "onError": null,
          "onNull": null
        }
      },
      "read_bw": {
        "$convert": {
          "input": {
            "$arrayElemAt": [
              "$read_bw_string.captures",
              0
            ]
          },
          "to": "double",
          "onError": null,
          "onNull": null
        }
      },
      "write_iops": {
        "$convert": {
          "input": {
            "$arrayElemAt": [
              "$write_iops_string.captures",
              0
            ]
          },
          "to": "double",
          "onError": null,
          "onNull": null
        }
      },
      "write_bw": {
        "$convert": {
          "input": {
            "$arrayElemAt": [
              "$write_bw_string.captures",
              0
            ]
          },
          "to": "double",
          "onError": null,
          "onNull": null
        }
      }
    }
  },
  {
    "$match": {
      "$or": [
        {
          "read_iops": {
            "$ne": null
          }
        },
        {
          "read_bw": {
            "$ne": null
          }
        },
        {
          "write_iops": {
            "$ne": null
          }
        },
        {
          "write_bw": {
            "$ne": null
          }
        }
      ]
    }
  },
  {
    "$limit": 10000
  },
  {
    "$addFields": {
      "read_iops": {
        "$ifNull": [
          "$read_iops",
          0
        ]
      },
      "read_bw": {
        "$ifNull": [
          "$read_bw",
          0
        ]
      },
      "write_iops": {
        "$ifNull": [
          "$write_iops",
          0
        ]
      },
      "write_bw": {
        "$ifNull": [
          "$write_bw",
          0
        ]
      }
    }
  },
  {
    "$group": {
      "_id": null,
      "combined_data": {
        "$push": "$$ROOT"
      }
    }
  }
]

[
    {
      "$project": {
        "_id": 0,
        "report.tests.keywords": 1,
        "report.tests.call.log.msg": 1,
        "report.collectors": 1
      }
    },
    {
      "$match": {
        "$and": [
          {
            "report.collectors.outcome": {
              "$regex": "passed"
            }
          },
          {
            "report.tests.keywords": {
              "$regex": "TestRandomReadWrite"
            }
          },
          {
            "report.tests.keywords": {
              "$regex": "test_run_io_operation"
            }
          }
        ]
      }
    },
    {
      "$unwind": {
        "path": "$report.tests"
      }
    },
    {
      "$unwind": {
        "path": "$report.tests.keywords"
      }
    },
    {
      "$match": {
        "report.tests.keywords": {
          "$regex": "test_run_io_operation"
        }
      }
    },
    {
      "$unwind": {
        "path": "$report.tests.call"
      }
    },
    {
      "$unwind": {
        "path": "$report.tests.call.log"
      }
    },
    {
      "$project": {
        "msg": "$report.tests.call.log.msg",
        "write_pattern_string": {
          "$regexFind": {
            "input": "$report.tests.keywords",
            "regex": "test_run_io_operation\\[(\\d+)-(\\d+)"
          }
        }
      }
    },
    {
      "$project": {
        "msg": 1,
        "write_pattern": {
          "$convert": {
            "input": {
              "$arrayElemAt": [
                "$write_pattern_string.captures",
                0
              ]
            },
            "to": "int",
            "onError": null,
            "onNull": null
          }
        },
        "ramp_times": {
          "$convert": {
            "input": {
              "$arrayElemAt": [
                "$write_pattern_string.captures",
                1
              ]
            },
            "to": "int",
            "onError": null,
            "onNull": null
          }
        }
      }
    },
    {
      "$project": {
        "write_pattern": 1,
        "ramp_times": 1,
        "read_iops_string": {
          "$regexFind": {
            "input": "$msg",
            "regex": "ramp_read_iops = (\\d+.\\d+)"
          }
        },
        "read_bw_string": {
          "$regexFind": {
            "input": "$msg",
            "regex": "ramp_read_bw = (\\d+.\\d+)"
          }
        },
        "write_iops_string": {
          "$regexFind": {
            "input": "$msg",
            "regex": "ramp_write_iops = (\\d+.\\d+)"
          }
        },
        "write_bw_string": {
          "$regexFind": {
            "input": "$msg",
            "regex": "ramp_write_bw = (\\d+.\\d+)"
          }
        }
      }
    },
    {
      "$project": {
        "write_pattern": 1,
        "ramp_times": 1,
        "read_iops": {
          "$convert": {
            "input": {
              "$arrayElemAt": [
                "$read_iops_string.captures",
                0
              ]
            },
            "to": "double",
            "onError": null,
            "onNull": null
          }
        },
        "read_bw": {
          "$convert": {
            "input": {
              "$arrayElemAt": [
                "$read_bw_string.captures",
                0
              ]
            },
            "to": "double",
            "onError": null,
            "onNull": null
          }
        },
        "write_iops": {
          "$convert": {
            "input": {
              "$arrayElemAt": [
                "$write_iops_string.captures",
                0
              ]
            },
            "to": "double",
            "onError": null,
            "onNull": null
          }
        },
        "write_bw": {
          "$convert": {
            "input": {
              "$arrayElemAt": [
                "$write_bw_string.captures",
                0
              ]
            },
            "to": "double",
            "onError": null,
            "onNull": null
          }
        }
      }
    },
    {
      "$match": {
        "write_pattern": {
          "$eq": 0
        },
        "ramp_times": {
          "$eq": 30
        }
      }
    },
    {
      "$group": {
        "_id": {
          "write_pattern": "$write_pattern",
          "ramp_times": "$ramp_times"
        },
        "avg_read_iops": {
          "$avg": "$read_iops"
        },
        "max_read_iops": {
          "$max": "$read_iops"
        },
        "min_read_iops": {
          "$min": "$read_iops"
        },
        "std_dev_read_iops": {
          "$stdDevPop": "$read_iops"
        },
        "avg_read_bw": {
          "$avg": "$read_bw"
        },
        "max_read_bw": {
          "$max": "$read_bw"
        },
        "min_read_bw": {
          "$min": "$read_bw"
        },
        "std_dev_read_bw": {
          "$stdDevPop": "$read_bw"
        },
        "avg_write_iops": {
          "$avg": "$write_iops"
        },
        "max_write_iops": {
          "$max": "$write_iops"
        },
        "min_write_iops": {
          "$min": "$write_iops"
        },
        "std_dev_write_iops": {
          "$stdDevPop": "$write_iops"
        },
        "avg_write_bw": {
          "$avg": "$write_bw"
        },
        "max_write_bw": {
          "$max": "$write_bw"
        },
        "min_write_bw": {
          "$min": "$write_bw"
        },
        "std_dev_write_bw": {
          "$stdDevPop": "$write_bw"
        }
      }
    }
  ]
  